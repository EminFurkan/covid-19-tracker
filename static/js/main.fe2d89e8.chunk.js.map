{"version":3,"sources":["services/ApiData.js","components/Graph.js","components/Search.js","components/Stats.js","components/Loader.js","components/TotalGraph.js","components/DynamicGraph.js","App.js","index.js"],"names":["API_KEY","process","getTotalData","a","config","headers","axios","get","res","data","console","log","getCountriesData","Graph","countryData","undefined","Object","entries","filter","item","match","reduce","acc","k","v","Number","replace","newCases","x","y","totalCases","fill","totalDeaths","totalRecovered","activeCases","className","theme","VictoryTheme","material","domainPadding","barWidth","animate","duration","style","datum","Search","inputHandler","type","placeholder","onKeyPress","e","key","target","value","charAt","toUpperCase","slice","Stats","country","Loader","TotalGraph","map","totalData","label","labels","fontSize","DynamicGraph","useState","currentDataSet","setCurrentDataSet","start","finish","currentIndexGap","setCurrentIndexGap","useEffect","timer","setTimeout","length","clearTimeout","index","width","height","viewBox","offset","colorScale","App","displayData","displayGraph","displayDynamicData","dataState","setDataState","totalState","setTotalState","result","dataHandler","input","RegExp","test","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe2d89e8.chunk.js","sourcesContent":["import axios from 'axios';\nconst API_KEY = process.env.REACT_APP_API_KEY\n\nexport const getTotalData = async () => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      'authorization': API_KEY,\n    }\n  }\n  try {\n    const res = await axios.get('https://api.collectapi.com/corona/totalData', config);\n    return res.data;\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport const getCountriesData = async () => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      'authorization': API_KEY,\n    }\n  }\n  try {\n    const res = await axios.get('https://api.collectapi.com/corona/countriesData', config);\n    return res.data;\n  } catch (err) {\n    console.log(err);\n  }\n}","import React from 'react';\nimport { VictoryBar, VictoryChart, VictoryTheme} from 'victory';\nimport '../styles/Graph.css';\n\nexport const Graph = ({ data }) => {\n\n  let countryData;\n\n  data = Object.entries(data)\n  .filter(item => item[1].match(/(\\d+(\\.\\d+)?)/))\n  .reduce((acc, [k,v]) => {\n    acc[k] = Number(v.replace(/,/g, ''));\n    return acc\n  }, {});\n\n  data.newCases === undefined ? data.newCases = 0 : data.newCases = data.newCases;\n\n  countryData = [\n    { x: 1, y: Number(`${data.totalCases}`), fill: \"rgb(255, 244, 137)\"},\n    { x: 2, y: Number(`${data.totalDeaths}`), fill: \"rgb(250, 87, 193)\"},\n    { x: 3, y: Number(`${data.totalRecovered}`), fill: \"rgb(177, 102, 204)\" },\n    { x: 4, y: Number(`${data.newCases}`), fill: \"rgb(117, 114, 255)\"},\n    { x: 5, y: Number(`${data.activeCases}`), fill: \"rgb(105, 166, 249)\" }\n  ];\n\n  return (\n    <div className='graph'>\n      <VictoryChart\n        theme={VictoryTheme.material}\n        domainPadding={ 10 }\n      >\n      <VictoryBar\n      barWidth={ 8 }\n      animate={{duration: 500}}\n      style={{\n        data: {\n          fill: ({ datum }) => datum.fill\n        }\n      }}\n      data= { countryData }\n      />\n      </VictoryChart>\n    </div>\n  )\n}","import React from 'react';\nimport '../styles/Search.css';\n\nexport const Search = ({ inputHandler }) => {\n\n  const onSubmit = e => {\n    if (e.key === 'Enter'){\n      inputHandler(e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1));\n      e.target.value = '';\n    }\n  }\n\n  return (\n    <input type=\"text\" placeholder=\"Enter the country name\" onKeyPress={onSubmit} />\n  )\n}","import React from 'react';\nimport '../styles/Stats.css';\n\nexport const Stats = ({ data }) => {\n\n  return (\n    <div className=\"stats\">\n      <h3>{ data.country }</h3>\n      <ul>\n        <li><span></span> Total Cases &nbsp;{ data.totalCases }</li>\n        <li><span></span> Total Deaths &nbsp;{ data.totalDeaths }</li>\n        <li><span></span> Total Recovered &nbsp;{ data.totalRecovered }</li>\n        <li><span></span> New Cases &nbsp;{ data.newCases }</li>\n        <li><span></span> Active Cases &nbsp;{ data.activeCases }</li>\n      </ul>\n    </div>\n  )\n}","import React from 'react';\nimport '../styles/Loader.css';\n\nexport const Loader = () => (\n    <div className=\"stats\">\n      <div className=\"loader\">\n      </div>\n    </div>\n)","import React from 'react';\nimport { VictoryPie } from 'victory';\nimport '../styles/TotalGraph.css';\n\nexport const TotalGraph = ({ res }) => {\n\n  res = Object.entries(res)\n  .map(item => item = [item[0], item[1] = item[1].replace(/,/g, '')])\n  .reduce((acc, [k,v]) => {\n    acc[k] = v;\n    return acc\n  }, {});\n\n  let totalData = [\n    { x: 1, y: Number(`${res.totalDeaths}`), label: \"Total Deaths\" },\n    { x: 2, y: Number(`${res.totalCases}`), label: \"Total Cases\" },\n    { x: 3, y: Number(`${res.totalRecovered}`), label: \"Total Recovered\" }\n  ];\n\n  return (\n    <div className=\"total\">\n      <VictoryPie\n        animate={{\n          duration: 2000\n        }}\n        style={{ labels: { fill: \"#ddd\", fontSize: 12 } }}\n        // innerRadius={100}\n        data={ totalData }\n      />\n    </div>\n  )\n}","import React, { useEffect, useState } from 'react';\nimport { VictoryChart, VictoryTheme, VictoryGroup, VictoryBar } from 'victory';\n\nexport const DynamicGraph = ({ data }) => {\n\n  const [currentDataSet, setCurrentDataSet] = useState([]);\n\n  const [currentIndexGap, setCurrentIndexGap] = useState({\n    start: 0,\n    finish: 6\n  });\n\n  data = data\n  .map(item => {\n    return Object.entries(item)\n    .filter(item => item = [item[0], item[1] = item[1].replace(/,/g, '')])\n    .reduce((acc, [k,v]) => {\n      acc[k] = v.replace(/,/g, '')\n      return acc\n    }, {});\n  });\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setCurrentIndexGap({\n        start: currentIndexGap.finish,\n        finish: (currentIndexGap.finish + 6) % data.length\n      })\n      setCurrentDataSet(data.slice(currentIndexGap.start, currentIndexGap.finish));\n    }, 6000);\n    return () => clearTimeout(timer);\n  }, [currentIndexGap.start, currentIndexGap.finish, data]);\n\n  return (\n    <>\n    <ul className=\"list\">\n      <li>Total Cases</li>\n      <li>Total Recovered</li>\n      <li>Total Deaths</li>\n    </ul>\n    <div className=\"dynamic\">\n      {\n        currentDataSet.map((item, index) => \n          <VictoryChart\n            width={200} height={200}\n            theme={VictoryTheme.material}\n            key={index}\n          >\n            <VictoryGroup\n              viewBox={\"0 0 100 50\"}\n              offset={30}\n              style={{\n                data: { width: 6 },\n                labels: { fill: \"#ddd\", fontSize: 10 }\n              }}\n              key={index}\n              colorScale={[\n                \"#375e92\",\n                \"#fb6542\",\n                \"#ffbb00\",\n              ]}\n            >\n              <VictoryBar\n                data={[\n                  { x: item.country,\n                    y: Number(item.totalCases),\n                    label: item.totalCases \n                  },\n                ]}\n              />\n              <VictoryBar\n                data={[\n                  { x: item.country,\n                    y: Number(item.totalRecovered),\n                    label: item.totalRecovered\n                  },\n                ]}\n              />\n              <VictoryBar\n                data={[\n                  { x: item.country,\n                    y: Number(item.totalDeaths),\n                    label: item.totalDeaths\n                  },\n                ]}\n              />\n            </VictoryGroup>\n          </VictoryChart>\n        )\n      }\n    </div>\n    </>\n  )\n}","import React, { useState, useEffect } from 'react';\nimport './styles/App.css';\nimport { getCountriesData, getTotalData } from './services/ApiData';\nimport { Graph } from './components/Graph';\nimport { Search } from './components/Search';\nimport { Stats } from './components/Stats';\nimport { Loader } from './components/Loader';\nimport { TotalGraph } from './components/TotalGraph';\nimport { DynamicGraph } from './components/DynamicGraph';\n\nfunction App() {\n  const [dataState, setDataState] = useState({});\n  const [totalState, setTotalState] = useState({});\n\n  useEffect(() => {\n    const dataHandler = async () => {\n      const { result } = await getCountriesData();\n      setDataState({res:result});\n    }\n    dataHandler();\n  }, []);\n\n  useEffect(() => {\n    const dataHandler = async () => {\n      const { result } = await getTotalData();\n      setTotalState({res:result});\n    }\n    dataHandler();\n  }, [])\n\n  const inputHandler = input => {\n    const res = dataState.res\n    .filter(data => new RegExp(`${input}`, 'i')\n    .test(data.country));\n    setDataState(prevState => {return {...prevState, data:res[0]}});\n  }\n\n  let displayData;\n  let displayGraph;\n  let displayDynamicData;\n\n  if (dataState.data !== undefined){\n    displayGraph = (\n      <Graph data={ dataState.data }/>\n    )\n    displayData = (\n    <Stats data={ dataState.data } />\n    )\n  } else {\n    displayGraph = (\n      totalState.res === undefined ? <Loader /> : <TotalGraph res={ totalState.res } />\n    )\n    displayData = (\n    totalState.res === undefined ? <Loader /> : <Stats data={ totalState.res } />);\n  }\n\n  dataState.res !== undefined ? \n  displayDynamicData = (<DynamicGraph data={ dataState.res } />) \n  : displayDynamicData = (<Loader />);\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <Search inputHandler={ inputHandler } />\n        <section className=\"infograph\">\n          { displayGraph }\n          { displayData }\n        </section>\n      </div>\n      { displayDynamicData }\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}